#set page(
  paper: "a4",
  header: align(
    right + horizon,
    "Kotlin Review Sheet",
  ),
  numbering: "1",
  columns: 2,
)

= 基礎編
== 標準出力
+ `Hello World!`とコンソール上に表示するスクリプトを記述してください．

== 変数
+ `Int`型変数を宣言し，初期化してください．
+ `Float`型変数を宣言し，初期化してください．
+ `Double`型変数を宣言し，初期化してください．
+ `Boolean`型変数を宣言し，初期化してください．
+ `String`型変数を宣言し，初期化してください．
+ `var`と`val`，それぞれのキーワードによって宣言された変数の挙動の違いを説明してください．
+ 可能な限り，`var`と`val`どちらを使用する方が好ましいですか？また，その理由を説明してください．
+ 以下の宣言文では，左辺の型指定を省略することができます．それはなぜですか？　#linebreak()`val num:Int = 3`
+ Non-Nullableとはどういうことですか．
+ Nullableな変数を宣言してください．

== 演算子
+ 加算，減算，乗算，除算，余りを求める演算子をそれぞれ記述してください．
+ 同値，超える，下回る，以上，以下であるか判定するための演算子をそれぞれ記述してください．
+ 演算子の挙動は何によって定義されますか？

== フロー制御
+ `Boolean`値に応じて処理の流れを分岐させるときに使う構文は何ですか．
+ プログラミングにおいて，「式(expression)」と「文(statement)」の違いを説明してください．
+ C言語などのプログラミング言語では，`if`は式ですか？文ですか？
+ C言語などのプログラミング言語で，`if`文を式のように扱う構文の名前を答えてください．
+ Kotlinにおいて，`if`は式ですか？文ですか？
+ `val age:Int`が20以上である場合，`"お酒が飲めます"`，そうでない場合`"お酒は飲めません"`という値で初期化される`String`型変数を定義してください．
+ Kotlinにおいて，値の複数のケースに応じて処理の流れを分岐させるときに使う構文は何ですか．

== 関数
+ `(Int, Float) -> String`のシグネチャを持つ関数を定義してください（関数の中身は記述しなくても構いません）．
+ `(Float) -> Float`のシグネチャを持ち，入力された引数の値を2乗して返す関数を定義してください．
+ Kotlinは，関数を第一級オブジェクトとして扱える言語です．これはどういう意味でしょうか．
+ 変数に関数を代入してください．（関数呼び出しではないことに注意）
+ デフォルト引数を持つ関数を定義してください．
+ デフォルト引数を利用するメリットを何か挙げてみてください．

== クラス
+ 「自然数」を表すクラスを定義してみてください．（表現された値がInt型で，0未満にならなければ良いことにします）
+ 「Twitterの投稿」を表すクラスを定義してみてください．その後，いくつか値を変えて複数インスタンス化してみてください．
+ クラスに定義された値を何と言いますか．
+ クラスに定義された関数を何と言いますか．
+ アクセス修飾子を使って，プロパティかメソッドを外部からアクセスできなくしてみてください．
+ 加算演算子の演算対象となる，2次元ベクトルを表現するクラスを定義してみてください．$ast.op$
+ データ指向のクラスを定義するとき，`data class`を利用するメリットを説明してください．$ast.op$
+ `interface`とは何ですか．
+ ロード中，ロード済，ロード失敗の3つの状態を持つクラスを，`sealed class/interface`を用いて定義してください．
+ `Boolean`や`enum class`ではなく，`sealed class/interface`を利用するメリットについて説明してください．

== ラムダ
+ `Int`型，`Float`型を引数リストで受け取り，`String`型を返すような関数の型はどのように記述されますか？
+ `(Int) -> String`型ラムダを定義してください．
+ ラムダを受け取る関数を定義してください．
+ ラムダなど，関数を受け取る関数のことを何と言いますか．
+ トレーリングラムダ(trailing lambda)記法の実例を何か記述してみてください．

== リスト操作
+ 1から100までの整数が入った`List<Int>`を初期化してください．
+ `List<E>`クラスはあらゆる型`E`に対応しますが，このようにクラスや関数で型をパラメータとして受け取る機能のことを何と言いますか？
+ リストの全ての要素を別の値に変換する，`(transform: (T) -> R) -> List<R>`というシグネチャを持つKotlin標準の関数は何ですか？
+ `ages: List<Int>`を`List<Boolean>`に，それぞれの要素の値が`20`以上であれば`True`，そうでなければ`False`に変換してください．
